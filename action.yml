name: Kustomized Helm Action
description: Generate manifests for Helm and kustomize using GitHub Actions.

author: 'James D.'
branding:
  icon: 'git-merge'
  color: 'red'
inputs:
  source_folder:
    description: 'The folder containing the Helm charts and kustomize overlays'
    required: true
  destination_branch:
    description: 'The branch to commit the changes to'
    required: true
  helm_version:
    description: 'The version of Helm to use'
    required: false
    default: 'v3.14.4'
  include_crds:
    description: 'Whether to include CRDs in the generated manifests'
    required: false
    default: 'true'
  dry_run:
    description: 'Whether to skip the commit and push steps (its for testing)'
    required: false
    default: 'false'
runs:
  using: composite

  steps:
    - run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
      shell: bash

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: ${{ inputs.helm_version }}

    - name: Set some ENV Vars
      run: |
        echo "COMMIT_MESSAGE=${{ github.event.head_commit.message }}" >> $GITHUB_ENV
        echo "COMMIT_ID=${{ github.event.head_commit.id }}" >> $GITHUB_ENV
      shell: bash

    - name: Get Directories for Processing
      run: |
        set -e
        dirs=$(find "$(pwd)" -type d -regex ".*/${{ inputs.source_folder }}/[^/]+/overlays/[^/]+" | tr '\n' ',') || true
        if [ -z "$dirs" ]; then
          echo "No directories found for processing."
          exit 0
        fi
        echo "DIRS=${dirs%,}" >> $GITHUB_ENV
        echo "Found directories for processing: $dirs"
      shell: bash

    - name: Add Helm repositories dynamically
      run: ./scripts/helm_repo_add.sh
      shell: bash
    
    - name: Template Helm charts
      env:
        INCLUDE_CRDS: ${{ inputs.include_crds }}
      run: ./scripts/helm_template_charts.sh
      shell: bash

    - name: Commit changes to branch
      run: ./scripts/git_commit_push.sh
      env:
        DRY_RUN: ${{ inputs.dry_run }}
        DESTINATION_BRANCH: ${{ inputs.destination_branch }}
      shell: bash
